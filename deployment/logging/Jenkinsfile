node {
    def app

    stage('Clone repository') {

        checkout scm
    }

    stage('Set Terraform path') {
        script {
         def tfHome = tool name: 'Terraform'
         env.PATH = "${tfHome}:${env.PATH}"
        }
        sh "terraform -version"
    }
 
    stage('Terraform Init') {
      
        sh "cd deployment/logging; terraform init -input=false"
      
    }

// Not the right way. Correct way would be to use a remote state.
// Destroying for workarounding state issues.
    stage('Destroy') {

        sh "helm uninstall grafana -n grafana|| exit 0"
        sh "helm uninstall loki || exit 0"
        sh "kubectl delete namespaces grafana || exit 0 "

    }

    stage('Terraform Plan') {
      
        sh "cd deployment/logging; terraform plan -out=tfplan -input=false"
      
    }
    stage('Terraform Apply') {
      
        sh "cd deployment/logging; terraform apply -input=false tfplan"
      
    }
}
