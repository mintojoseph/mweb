node {
    def app

    stage('Clone repository') {

        checkout scm
    }

    stage('Set Terraform path') {
        script {
         def tfHome = tool name: 'Terraform'
         env.PATH = "${tfHome}:${env.PATH}"
        }
        sh "terraform -version"
    }
 
    stage('Terraform Init') {
      
        sh "cd deployment/logging; terraform init -input=false"
      
    }

// Not the right way. Correct way would be to use a remote state. 
// Destroying for workarounding state issues.
    stage('Terraform Destroy') {
        job:
          script:
            - false || exit_code=$?
            - if [ $exit_code -ne 0 ]; then echo "Previous command failed"; fi;

        sh "helm uninstall grafana"
        sh "helm uninstall loki"

    }

    stage('Terraform Plan') {
      
        sh "cd deployment/logging; terraform plan -out=tfplan -input=false"
      
    }
    stage('Terraform Apply') {
      
        sh "cd deployment/logging; terraform apply -input=false tfplan"
      
    }
}
